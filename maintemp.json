{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "string",
            "metadata": {
                "description": "name parameter to be input for use in Linked Template-1 and Template-2"
            },
            "defaultValue": "linkeddemo001"
        }
    },
    "functions": [],
    "variables": {
        "linked-template-one": "https://raw.githubusercontent.com/go4adil/GitHub-Linked-Templates/refs/heads/main/linked-template-one.json",
        "linked-template-two": "https://raw.githubusercontent.com/go4adil/GitHub-Linked-Templates/refs/heads/main/linked-template-two.json"
    },
    "resources": [
        {
            "name": "storage",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2024-07-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('linked-template-one')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "name": {
                        "value": "[parameters('name')]"
                    },
                    "location": {
                        "value": "[resourceGroup().location]"
                    }
                }
            }
        },
        {
            "name": "identity",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2024-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'storage')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('linked-template-two')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "name": {
                        "value": "[parameters('name')]"
                    },
                    "location": {
                        "value": "[resourceGroup().location]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "storageURI": {
            "type": "string",
            "value": "[reference('storage').outputs.storageEndpoint.value]"
        }
    }
}